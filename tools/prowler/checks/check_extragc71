#!/usr/bin/env bash
# Prowler - the handy cloud security tool (copyright 2019) by Toni de la Fuente
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# Remediation:
#
#   here URL to the relevand/official documentation
#
#   here commands or steps to fix it if avalable, like: 
#   aws logs put-metric-filter \
#     --region us-east-1 \
#     --log-group-name CloudTrail/MyCloudTrailLG \
#     --filter-name AWSCloudTrailChanges \
#     --filter-pattern '{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }' \
#     --metric-transformations metricName=CloudTrailEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
#
#
# Government of Canada Cloud Guardrails Exentions
# Eric Maia and Scott Levac Treasury Board of Canada Secretariat
# December 2019
# Looks for any ELBs using HTTP and returns and FAIL message

CHECK_ID_extragc71="7.1"
CHECK_TITLE_extragc71="[checkGC71] Look for Load Balancers using HTTP (Not Scored) (part of GC Guardrails)"
CHECK_SCORED_extragc71="NOT_SCORED"
CHECK_TYPE_extragc71="EXTRA"
CHECK_ALTERNATE_extragc71="extragc71"



extragc71(){

    GC_LOAD_BALANCER_LIST71=$($AWSCLI elbv2 describe-load-balancers $PROFILE_OPT --region $REGION --output text --query 'LoadBalancers[*].LoadBalancerArn')

    if [[ $GC_LOAD_BALANCER_LIST71 ]];then
      
      for loadbalancer in $GC_LOAD_BALANCER_LIST71;do

       GC_LISTENER_PROTOCOL71=$($AWSCLI elbv2 describe-listeners --load-balancer-arn $loadbalancer $PROFILE_OPT --region $REGION  --output text --query 'Listeners[*].Protocol')
        echo "$GC_LISTENERS_PROTOCOL71"
        for balancerprotocols in $GC_LISTENER_PROTOCOL71;do

            if [[ $balancerprotocols == "HTTP" ]];then
               #echo "help $GC_LISTENERS_PROTOCOL71"
               textFail "$loadbalancer is using HTTP instead of HTTPS"
               return
            fi
        done
      done  
     
    fi
   
}
